{"version":3,"sources":["components/Landing/Landing.tsx","components/OurMission/OurMission.tsx","components/TheTeam/components/PersonTile.tsx","components/TheTeam/TheTeam.tsx","components/Contact/Contact.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["Wrapper","styled","div","Content","SubTitle","Title","Nav","Landing","to","spy","smooth","duration","OurMission","Image","imageUrl","PersonTile","title","subTitle","TeamTileWrapper","TheTeam","Input","input","Message","textarea","Button","button","Form","form","SubmitMsg","Contact","useState","submitMsg","setSubmitMsg","useForm","register","handleSubmit","setValue","errors","onSubmit","data","templateParams","from_name","name","to_name","email","message_html","msg","emailjs","then","response","error","placeholder","type","ref","required","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.114c3c7a.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link, animateScroll as scroll } from 'react-scroll';\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  background-color: #6a90a3;\r\n  color: white;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  max-width: 800px;\r\n  margin: auto;\r\n`;\r\n\r\nconst SubTitle = styled.div`\r\n  width: auto;\r\n  font-size: 4vh;\r\n  color: white;\r\n  font-weight: 200;\r\n  padding-top: 15px;\r\n  letter-spacing: 1px;\r\n\r\n  &:hover {\r\n    letter-spacing: 3px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 11vh;\r\n  padding: 10% 0 0 30px;\r\n  letter-spacing: 5px;\r\n`;\r\n\r\nconst Nav = styled.div`\r\n  width: auto;\r\n  height: 20vh;\r\n  text-align: right;\r\n  padding: 10% 10% 0 0;\r\n`;\r\n\r\nfunction Landing() {\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <Nav>\r\n          <Link to=\"our-mission-page\" spy={true} smooth={true} duration={500}>\r\n            <SubTitle>Markmið okkar</SubTitle>\r\n          </Link>\r\n          <Link to=\"the-team-page\" spy={true} smooth={true} duration={500}>\r\n            <SubTitle>Teymið okkar</SubTitle>\r\n          </Link>\r\n          <Link to=\"contact-page\" spy={true} smooth={true} duration={500}>\r\n            <SubTitle>Hafa samband</SubTitle>\r\n          </Link>\r\n        </Nav>\r\n        <Title>Spjara</Title>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  background-color: white;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  max-width: 800px;\r\n  margin: auto;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 10vh;\r\n  color: #6a90a3;\r\n  padding: 60px 0 0 30px;\r\n  letter-spacing: 5px;\r\n`;\r\n\r\nfunction OurMission() {\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <Title>Markmið okkar</Title>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default OurMission;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 150px;\r\n  background-color: #6a90a3;\r\n  text-align: center;\r\n  align-items: middle;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 20px;\r\n  color: white;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nconst SubTitle = styled.div`\r\n  font-size: 15px;\r\n  color: white;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nconst Image = styled.div<{ imageUrl: string | undefined }>`\r\n  content: '';\r\n  background-image: url(${({ imageUrl }) => imageUrl});\r\n  background-size: cover;\r\n  background-color: white;\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 50%;\r\n  border: 5px solid #da6732;\r\n`;\r\n\r\nfunction PersonTile({\r\n  title,\r\n  subTitle,\r\n  imageUrl\r\n}: {\r\n  title?: string;\r\n  subTitle?: string;\r\n  imageUrl?: string;\r\n}) {\r\n  return (\r\n    <Wrapper>\r\n      <Image imageUrl={imageUrl} />\r\n      <Title>{title}</Title>\r\n      <SubTitle>{subTitle}</SubTitle>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default PersonTile;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PersonTile from './components/PersonTile';\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  background-color: #6a90a3;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  max-width: 800px;\r\n  margin: auto;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 10vh;\r\n  color: white;\r\n  padding: 60px 0 0 30px;\r\n  letter-spacing: 5px;\r\n`;\r\n\r\nconst TeamTileWrapper = styled.div`\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\r\n  grid-template-rows: repeat(auto-fill, minmax(230px, 1fr));\r\n  grid-gap: 10px;\r\n  justify-content: center;\r\n  align-content: center;\r\n`;\r\n\r\nfunction TheTeam() {\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <Title>Teymið okkar</Title>\r\n        <TeamTileWrapper>\r\n          <PersonTile\r\n            title=\"John Dow\"\r\n            subTitle=\"sub title\"\r\n            imageUrl=\"https://content.api.news/v3/images/bin/a6923adbc7bece73803221613f410782\"\r\n          />\r\n          <PersonTile title=\"John Dow\" subTitle=\"sub title\" />\r\n          <PersonTile title=\"John Dow\" subTitle=\"sub title\" />\r\n          <PersonTile title=\"John Dow\" subTitle=\"sub title\" />\r\n          <PersonTile title=\"John Dow\" subTitle=\"sub title\" />\r\n          <PersonTile title=\"John Dow\" subTitle=\"sub title\" />\r\n          <PersonTile title=\"John Dow\" subTitle=\"sub title\" />\r\n        </TeamTileWrapper>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default TheTeam;\r\n","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as emailjs from 'emailjs-com'\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  background-color: white;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  max-width: 800px;\r\n  margin: auto;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 10vh;\r\n  color: #6a90a3;\r\n  padding: 60px 0 0 30px;\r\n  letter-spacing: 5px;\r\n  width: 75%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0.5em;\r\n  margin: 60px 0 0 30px;\r\n  background: white;\r\n  border-radius: 3px;\r\n  border-color: #90adbb;\r\n  margin: 100;\r\n  font-size: 1.5vh;\r\n  width: 75%;\r\n  color: #3a535f;\r\n`;\r\n\r\nconst Message = styled.textarea`\r\n  padding: 0.5em;\r\n  margin: 60px 0 0 30px;\r\n  background: white;\r\n  border: 1;\r\n  border-radius: 3px;\r\n  border-color: #6a90a3;\r\n  margin: 100;\r\n  font-size: 1.5vh;\r\n  color: #3a535f;\r\n  width: 75%;\r\n  height: 7vh;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin: 60px 0 20px 30px;\r\n  border-radius: 3px;\r\n  width: auto;\r\n  height: 5vh;\r\n  background: #6A90A3;\r\n  font-family: Tenor Sans;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 3vh;\r\n  line-height: 35px;\r\n  color: #FFFFFF;\r\n  display: block;\r\n`;\r\n\r\nconst Form = styled.form`\r\n   width: 100%;\r\n`;\r\n\r\nconst SubmitMsg= styled.form`\r\n  font-size: 30px;\r\n  color: #6A90A3;\r\n  letter-spacing: 1px;\r\n  margin-top: 2.0em;\r\n  margin-left: 1.0em;\r\n`;\r\n\r\ntype Inputs = {\r\n  name: string,\r\n  email: string,\r\n  msg: string,\r\n};\r\n\r\nfunction Contact() {\r\n  const [submitMsg, setSubmitMsg] = useState('');\r\n  const { register, handleSubmit, setValue, errors } = useForm<Inputs>();\r\n  const onSubmit = (data: { name: any; email: any; msg: any; }) => {\r\n    let templateParams = {\r\n      from_name: data.name,\r\n      to_name: 'Spjara',\r\n      email: data.email,\r\n      message_html: data.msg,\r\n     }\r\n\r\n     emailjs.send(\r\n      'service_4yru8hc',\r\n      'template_g116hw5',\r\n       templateParams,\r\n      'user_Mu5sU68wfPCmuoQXa0rIh'\r\n     )\r\n     .then(\r\n      function(response) {\r\n          setSubmitMsg(\"Skilaboðin þín hafa verið send. Takk fyrir!\");\r\n          setValue(\"name\", \"\");\r\n          setValue(\"email\", \"\");\r\n          setValue(\"msg\", \"\");\r\n      },\r\n      function(error) {\r\n        setSubmitMsg(\"Villa kom upp við sendingu, vinsamlegast reynið aftur\");\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <Title>Hafa samband</Title>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n         <Input name=\"name\" placeholder=\"Nafn*\" type=\"text\" ref={register({ required: true})} ></Input>\r\n         <Input name=\"email\" placeholder=\"Netfang*\" type=\"text\" ref={register({ required: true})}></Input>\r\n         <Message placeholder=\"Skilaboð*\" name=\"msg\" ref={register({ required: true})}></Message>\r\n         <Button type=\"submit\">Senda</Button>\r\n        </Form>\r\n        <SubmitMsg>{submitMsg}</SubmitMsg>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport Landing from './components/Landing/Landing';\r\nimport OurMission from './components/OurMission/OurMission';\r\nimport TheTeam from './components/TheTeam/TheTeam';\r\nimport Contact from './components/Contact/Contact';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { Element } from 'react-scroll';\r\n\r\n// https://fonts.googleapis.com/css?family=Tenor+Sans\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n@import url(https://fonts.googleapis.com/css?family=Tenor+Sans);\r\n\r\n* {\r\n  font-family: 'Tenor Sans';\r\n}\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Element name=\"landing-page\">\r\n        <Landing />\r\n      </Element>\r\n      <Element name=\"our-mission-page\">\r\n        <OurMission />\r\n      </Element>\r\n      <Element name=\"the-team-page\">\r\n        <TheTeam />\r\n      </Element>\r\n      <Element name=\"contact-page\">\r\n        <Contact />\r\n      </Element>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}